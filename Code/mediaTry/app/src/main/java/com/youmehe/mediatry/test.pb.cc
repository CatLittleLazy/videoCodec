// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace media {

namespace {

const ::google::protobuf::Descriptor* CalculatorOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CalculatorOptions_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_test_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_test_2eproto() {
  protobuf_AddDesc_test_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "test.proto");
  GOOGLE_CHECK(file != NULL);
  CalculatorOptions_descriptor_ = file->message_type(0);
  static const int CalculatorOptions_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalculatorOptions, merge_fields_),
  };
  CalculatorOptions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CalculatorOptions_descriptor_,
      CalculatorOptions::internal_default_instance(),
      CalculatorOptions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalculatorOptions, _has_bits_),
      -1,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalculatorOptions, _extensions_),
      sizeof(CalculatorOptions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalculatorOptions, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_test_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CalculatorOptions_descriptor_, CalculatorOptions::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_test_2eproto() {
  CalculatorOptions_default_instance_.Shutdown();
  delete CalculatorOptions_reflection_;
}

void protobuf_InitDefaults_test_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  CalculatorOptions_default_instance_.DefaultConstruct();
  CalculatorOptions_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_test_2eproto_once_);
void protobuf_InitDefaults_test_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_test_2eproto_once_,
                 &protobuf_InitDefaults_test_2eproto_impl);
}
void protobuf_AddDesc_test_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_test_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ntest.proto\022\005media\"9\n\021CalculatorOptions"
    "\022\030\n\014merge_fields\030\001 \001(\010B\002\030\001*\n\010\240\234\001\020\200\200\200\200\002B\037"
    "\n\024com.youmehe.mediatryB\007wytTest", 111);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "test.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_test_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_test_2eproto_once_);
void protobuf_AddDesc_test_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_test_2eproto_once_,
                 &protobuf_AddDesc_test_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_test_2eproto {
  StaticDescriptorInitializer_test_2eproto() {
    protobuf_AddDesc_test_2eproto();
  }
} static_descriptor_initializer_test_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalculatorOptions::kMergeFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalculatorOptions::CalculatorOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_test_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:media.CalculatorOptions)
}

void CalculatorOptions::InitAsDefaultInstance() {
}

CalculatorOptions::CalculatorOptions(const CalculatorOptions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:media.CalculatorOptions)
}

void CalculatorOptions::SharedCtor() {
  _cached_size_ = 0;
  merge_fields_ = false;
}

CalculatorOptions::~CalculatorOptions() {
  // @@protoc_insertion_point(destructor:media.CalculatorOptions)
  SharedDtor();
}

void CalculatorOptions::SharedDtor() {
}

void CalculatorOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalculatorOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CalculatorOptions_descriptor_;
}

const CalculatorOptions& CalculatorOptions::default_instance() {
  protobuf_InitDefaults_test_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CalculatorOptions> CalculatorOptions_default_instance_;

CalculatorOptions* CalculatorOptions::New(::google::protobuf::Arena* arena) const {
  CalculatorOptions* n = new CalculatorOptions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalculatorOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:media.CalculatorOptions)
  _extensions_.Clear();
  merge_fields_ = false;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CalculatorOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:media.CalculatorOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool merge_fields = 1 [deprecated = true];
      case 1: {
        if (tag == 8) {
          set_has_merge_fields();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &merge_fields_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((160000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, internal_default_instance(),
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:media.CalculatorOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:media.CalculatorOptions)
  return false;
#undef DO_
}

void CalculatorOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:media.CalculatorOptions)
  // optional bool merge_fields = 1 [deprecated = true];
  if (has_merge_fields()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->merge_fields(), output);
  }

  // Extension range [20000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      20000, 536870912, output);

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:media.CalculatorOptions)
}

::google::protobuf::uint8* CalculatorOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:media.CalculatorOptions)
  // optional bool merge_fields = 1 [deprecated = true];
  if (has_merge_fields()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->merge_fields(), target);
  }

  // Extension range [20000, 536870912)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      20000, 536870912, false, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:media.CalculatorOptions)
  return target;
}

size_t CalculatorOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:media.CalculatorOptions)
  size_t total_size = 0;

  // optional bool merge_fields = 1 [deprecated = true];
  if (has_merge_fields()) {
    total_size += 1 + 1;
  }

  total_size += _extensions_.ByteSize();

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalculatorOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:media.CalculatorOptions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CalculatorOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalculatorOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:media.CalculatorOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:media.CalculatorOptions)
    UnsafeMergeFrom(*source);
  }
}

void CalculatorOptions::MergeFrom(const CalculatorOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:media.CalculatorOptions)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CalculatorOptions::UnsafeMergeFrom(const CalculatorOptions& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_merge_fields()) {
      set_merge_fields(from.merge_fields());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void CalculatorOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:media.CalculatorOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalculatorOptions::CopyFrom(const CalculatorOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:media.CalculatorOptions)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CalculatorOptions::IsInitialized() const {


  if (!_extensions_.IsInitialized()) {
    return false;
  }
  return true;
}

void CalculatorOptions::Swap(CalculatorOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalculatorOptions::InternalSwap(CalculatorOptions* other) {
  std::swap(merge_fields_, other->merge_fields_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
  _extensions_.Swap(&other->_extensions_);
}

::google::protobuf::Metadata CalculatorOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CalculatorOptions_descriptor_;
  metadata.reflection = CalculatorOptions_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CalculatorOptions

// optional bool merge_fields = 1 [deprecated = true];
bool CalculatorOptions::has_merge_fields() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CalculatorOptions::set_has_merge_fields() {
  _has_bits_[0] |= 0x00000001u;
}
void CalculatorOptions::clear_has_merge_fields() {
  _has_bits_[0] &= ~0x00000001u;
}
void CalculatorOptions::clear_merge_fields() {
  merge_fields_ = false;
  clear_has_merge_fields();
}
bool CalculatorOptions::merge_fields() const {
  // @@protoc_insertion_point(field_get:media.CalculatorOptions.merge_fields)
  return merge_fields_;
}
void CalculatorOptions::set_merge_fields(bool value) {
  set_has_merge_fields();
  merge_fields_ = value;
  // @@protoc_insertion_point(field_set:media.CalculatorOptions.merge_fields)
}

inline const CalculatorOptions* CalculatorOptions::internal_default_instance() {
  return &CalculatorOptions_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace media

// @@protoc_insertion_point(global_scope)
